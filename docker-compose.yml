version: '3.8'

networks:
  outdoor-dev:
    driver: bridge

services:

  postgres_image:
    container_name: postgres_image
    image: postgres:latest
    ports:
      - "5432"
    restart: always
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "danil"
      POSTGRES_PASSWORD: "danil"
    networks:
      - outdoor-dev

  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    hostname: "rabbitmq"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=1234
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - outdoor-dev

  outdoor_back:
    container_name: outdoor_back
    image: eebbuunn/outdoor_back:latest
    build:
      context: .
    ports:
      - "5287:80"
    environment:
      ConnectionStrings__PostgresAuth: "host=postgres_image;port=5432;database=outdoor_back_db;username=danil;password=danil"
    restart: on-failure
    volumes:
      - ./.aspnet/outdoor_back/DataProtection-Keys:/root/.aspnet/DataProtection-Keys
    networks:
      - outdoor-dev
    depends_on:
      - "postgres_image"
      - "rabbitmq"

  outdoor_auth:
    container_name: outdoor_auth
    image: eebbuunn/outdoor_auth:latest
    build:
      context: .
    ports:
      - "8086:80"
    environment:
      ConnectionStrings__PostgresBackend: "host=postgres_image;port=5432;database=outdoor_auth_db;username=danil;password=danil"
    restart: on-failure
    volumes:
      - ./.aspnet/outdoor_back/DataProtection-Keys:/root/.aspnet/DataProtection-Keys
    networks:
      - outdoor-dev
    depends_on:
      - "postgres_image"
      - "rabbitmq"

volumes:
  db_volume: